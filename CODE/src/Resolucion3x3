/* Créé par Coline Cervellin 18/02/2015 */

import java.util.Random;

// It miss the movement, but don't know how to make it automate. Its why I didn't make it directly in our code.

public class Casilla{
    
    private Numero[] losNumeros;
    private Resolucion miResolucion;
    	
    
    public Casilla(){ // Make the Resolucion
        super();
        miResolucion = new Resolucion();
        losNumeros = new Numero[9];
        // I think do a loop to call the Numero constructeur
    }  
}



public class Numero { // All info of the "number" (position and number of the "number")
    
    private int numero;
    private int[] position;
    
    public Numero(int i, int x, int y){
        numero = i;
        position = new int[2];
        position[0] = x;
        position[1] = y;
    }
    
    
    public int getX(){
        return position[0];
    }
    
    public int getY(){
        return position[1];
    }
    
    public void setPosition(int x, int y){
        position[0] = x;
        position[1] = y;
    }
    
    public void setX(int x){
        position[0] = x;
    }
    
    public void setY(int y){
        position[1] = y;
    }
    
    public void addX(int x){
        position[0] += x;
    }
    
    public void addY(int y){
        position[1] += y;
    }
}



public class Resolucion {
    
    private int[][] casilla = new int[3][3];
    
    public Resolucion(){
        barajar(30);
    }
	
    public int getNumero(int i, int j){ // Get the number of the "number" following his position in the chart
        return casilla[i][j];
    }
	
    public void barajar(int n){ // I did it in case, cause i'm not sure if the normal Random can always have a solution. Not sure it works
        for(int i=0; i<3; i++){
            for(int j=0; j<3; j++){
                casilla[i][j] = i+j*3;
            }
        }
        int k = n;
        int[] posicionZero = {0,0};
        Random miRandom = new Random();
        do{
            int nb = miRandom.nextInt(3);
            switch(nb){
                case 0:
                     if(posicionZero[0]>0){
                         casilla[posicionZero[0]][posicionZero[1]]=casilla[posicionZero[0]-1][posicionZero[1]];
                         casilla[posicionZero[0]-1][posicionZero[1]]=0;
                         posicionZero[0]--;
                         k--;
                     }
                     break;
                 case 1:
                     if(posicionZero[1]>0){
                         casilla[posicionZero[0]][posicionZero[1]]=casilla[posicionZero[0]][posicionZero[1]-1];
                         casilla[posicionZero[0]][posicionZero[1]-1]=0;
                         posicionZero[1]--;
                         k--;
                     }
                     break;
                 case 2:
                     if(posicionZero[0]<3){
                         casilla[posicionZero[0]][posicionZero[1]]=casilla[posicionZero[0]+1][posicionZero[1]];
                         casilla[posicionZero[0]+1][posicionZero[1]]=0;
                         posicionZero[0]++;
                         k--;
                     }
                     break;
             }
        }while(k>0);
    }
    
    public int[][] esPosible(int i, int j){ // To know if a "number" can be deplaced. It looks at everynumbers to know which one is "white". In yes, the "number" can be deplaced in the direction of the "white"
        int[][] movimientos = {{i,i},{j,j}};
        if(i>0){
            if(casilla[i-1][j]==0){
                movimientos[0][0] = (i-1);
            }
        }
        if(j>0){
            if(casilla[i][j-1]==0){
                movimientos[1][0] = (j-1);
            }
        }
        if(j<2){
            if(casilla[i][j+1]==0){
                movimientos[1][1] = (j+1);
            }
        }
        return movimientos;
    }
    
    public void situar(int i, int j, int numero){ // To place the number and replace his old position by the "white"
        if(casilla[i][j]==0){
            casilla[i][j]=numero;
            if(i>0){
                if(casilla[i-1][j]==numero){
                    casilla[i-1][j]=0;
                }
            }
            if(j>0){
                if(casilla[i][j-1]==numero){
                    casilla[i][j-1]=0;
                }
            }
            if(j<2){
                if(casilla[i][j+1]==numero){
                    casilla[i][j+1]=0;
                }
            }
        }
    }
    
    public boolean esEmpleado(){ // To know if "numbers" are set up good (y)
        boolean resultado = true;
        for(int i=0; i<3; i++){
            for(int j=0; j<3; j++){
                if(casilla[i][j] != i+j*3){
                    resultado = false;
                }
            }
        }
        return resultado;
    }
    
}
